firstName = 'Mujeeb ur rahman'
alphabet = ' abcdefghijklmnopqrstuvwxyz '

print(len(firstName))
print(firstName.endswith("an"))
print(firstName.startswith("A"))
print(firstName.capitalize())
print(firstName.title())
print(firstName.upper())
print(firstName.isupper())
print(firstName.lower())
print(alphabet.islower())
print(firstName.count("e"))
print(firstName.count("r", 10,))
print(firstName.find("rahman"))
print(firstName.replace("rahman","Rahman"))
print(firstName.casefold())
print(firstName.swapcase())
print(' '.isspace())
print(' h '.strip())
print(' h '.lstrip())
print(' h '.rstrip())
print('42'.zfill(5))
print("hello".center(10, '*'))
print("hello\tworld".expandtabs(4))

sample_string = "hello world"
print("1. capitalize():", sample_string.capitalize())
print("2. casefold():", "HELLO".casefold())
print("3. center(20, '*'):", sample_string.center(20, '*'))
print("4. count('l'):", sample_string.count('l'))
print("5. encode():", sample_string.encode())
print("6. endswith('world'):", sample_string.endswith('world'))
print("7. expandtabs():", 'hello\tworld'.expandtabs(4))
print("8. find('world'):", sample_string.find('world'))
print("9. format():", "Hello, {}".format('John'))
print("10. format_map():", "{name}".format_map({"name": "Alice"}))
print("11. index('world'):", sample_string.index('world'))
print("12. isalnum():", "hello123".isalnum())
print("13. isalpha():", "hello".isalpha())
print("14. isascii():", "hello".isascii())
print("15. isdecimal():", "123".isdecimal())
print("16. isdigit():", "123".isdigit())
print("17. isidentifier():", "var_name".isidentifier())
print("18. islower():", "hello".islower())
print("19. isnumeric():", "123".isnumeric())
print("20. isprintable():", "hello".isprintable())
print("21. isspace():", "   ".isspace())
print("22. istitle():", "Hello World".istitle())
print("23. isupper():", "HELLO".isupper())
print("24. join():", ", ".join(["apple", "banana", "cherry"]))
print("25. ljust(20, '*'):", sample_string.ljust(20, '*'))
print("26. lower():", "HELLO".lower())
print("27. lstrip():", "  hello".lstrip())
print("28. maketrans() & translate():", "abc".translate(str.maketrans("abc", "123")))
print("29. partition(' '):", sample_string.partition(' '))
print("30. removeprefix('un'):", "unhappy".removeprefix('un'))
print("31. removesuffix('ing'):", "flying".removesuffix('ing'))
print("32. replace('world', 'Python'):", sample_string.replace('world', 'Python'))
print("33. rfind('l'):", sample_string.rfind('l'))
print("34. rindex('l'):", sample_string.rindex('l'))
print("35. rjust(20, '*'):", sample_string.rjust(20, '*'))
print("36. rpartition(' '):", sample_string.rpartition(' '))
print("37. rsplit(',', 1):", "apple,banana,cherry".rsplit(',', 1))
print("38. rstrip():", "hello   ".rstrip())
print("39. split():", sample_string.split())
print("40. splitlines():", "hello\nworld".splitlines())
print("41. startswith('he'):", sample_string.startswith('he'))
print("42. strip():", "  hello  ".strip())
print("43. swapcase():", "Hello".swapcase())
print("44. title():", sample_string.title())